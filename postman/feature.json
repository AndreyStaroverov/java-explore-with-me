{
	"info": {
		"_postman_id": "9fbfbcc9-fa28-4ad5-8f46-78ded252bb1d",
		"name": "Test EWM comments",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26525999"
	},
	"item": [
		{
			"name": "admin",
			"item": [
				{
					"name": "добавление нового комментария от администратора проверка пустого сообщения 400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/admin/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "добавление комментария от администратора к несуществующему событию 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"add comments from for test\",\r\n    \"event\": 999,\r\n    \"user\": 1\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/admin/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "добавление комментария от администратора",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});\r",
									"pm.test(\"Test comment get id=1\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id, '\"id\" field').to.eql(1);\r",
									"    pm.expect(jsonData.text, '\"text\" field');\r",
									"    pm.expect(jsonData.userId, '\"userId\" field');\r",
									"    pm.expect(jsonData.created, '\"created\" field').not.null;\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"add comments from for test post method\",\r\n    \"event\": 2,\r\n    \"user\": 1\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/admin/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "получение комментария по идентификатору от администратора",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									"pm.test(\"Test comment get id=1\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id, '\"id\" field').to.eql(1);\r",
									"    pm.expect(jsonData.text, '\"text\" field');\r",
									"    pm.expect(jsonData.userId, '\"userId\" field');\r",
									"    pm.expect(jsonData.created, '\"created\" field').not.null;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin/comments/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"comments",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "получение всех комментариев определенного пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									"pm.test(\"Test list booking response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length, 'List length must be 1').to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin/comments/1/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"comments",
								"1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "получение всех комментариев определенного пользователя 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin/comments/999/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"comments",
								"999",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "получение комментария по идентификатору от администратора 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin/comments/999",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"comments",
								"999"
							]
						}
					},
					"response": []
				},
				{
					"name": "получение комментария по идентификатору от администратора 409",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 409\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([409]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin/comments/-1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"comments",
								"-1"
							]
						}
					},
					"response": []
				},
				{
					"name": "обновление текста сообщения от администратора 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									"pm.test(\"Test comment get id=1\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id, '\"id\" field').to.eql(1);\r",
									"    pm.expect(jsonData.text, '\"text\" field').to.eql(\"update text for test patch admin\");\r",
									"    pm.expect(jsonData.userId, '\"userId\" field');\r",
									"    pm.expect(jsonData.created, '\"created\" field').not.null;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"update text for test patch admin\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/admin/comments/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"comments",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "обновление текста сообщения от администратора 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"update text for test patch admin\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/admin/comments/999",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"comments",
								"999"
							]
						}
					},
					"response": []
				},
				{
					"name": "обновление текста сообщения от администратора 400 валидация",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/admin/comments/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"comments",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "удаление комментария от админа 204",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin/comments/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"comments",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "удаление комментария от админа 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin/comments/9999",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"comments",
								"9999"
							]
						}
					},
					"response": []
				},
				{
					"name": "удаление комментария от админа 409",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([409]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin/comments/-1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"comments",
								"-1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "user",
			"item": [
				{
					"name": "добавление нового комментария от user проверка пустого сообщения 400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/1/comments/event/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"1",
								"comments",
								"event",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "добавление нового комментария от user 404 event",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"text for test comments method\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/1/comments/event/9999",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"1",
								"comments",
								"event",
								"9999"
							]
						}
					},
					"response": []
				},
				{
					"name": "добавление нового комментария от user 404-user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"text for test comments method\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/9999/comments/event/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"9999",
								"comments",
								"event",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "добавление нового комментария от user 201",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});\r",
									"pm.test(\"Test comment get id=1\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id, '\"id\" field').to.eql(2);\r",
									"    pm.expect(jsonData.text, '\"text\" field').to.eql(\"text for test comments method\");\r",
									"    pm.expect(jsonData.userId, '\"userId\" field');\r",
									"    pm.expect(jsonData.created, '\"created\" field').not.null;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"text for test comments method\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/1/comments/event/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"1",
								"comments",
								"event",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "получение всех комментариев определенного события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									"pm.test(\"Test list booking response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length, 'List length must be 1').to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/comments/event/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"comments",
								"event",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "получение всех комментариев определенного события 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/comments/event/999",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"comments",
								"event",
								"999"
							]
						}
					},
					"response": []
				},
				{
					"name": "получение всех комментариев определенного события 409",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 409\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([409]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/comments/event/-1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"comments",
								"event",
								"-1"
							]
						}
					},
					"response": []
				},
				{
					"name": "получение комментария по идентификатору от user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									"pm.test(\"Test comment get id=1\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id, '\"id\" field').to.eql(2);\r",
									"    pm.expect(jsonData.text, '\"text\" field');\r",
									"    pm.expect(jsonData.userId, '\"userId\" field');\r",
									"    pm.expect(jsonData.created, '\"created\" field').not.null;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/comments/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"comments",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "получение комментария по идентификатору от user 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/comments/999",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"comments",
								"999"
							]
						}
					},
					"response": []
				},
				{
					"name": "получение всех комментариев пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									"pm.test(\"Test list booking response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length, 'List length must be 1').to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/1/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"1",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "получение всех комментариев пользователя 404 user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/999/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"999",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "обновление текста сообщения от user 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									"pm.test(\"Test comment get id=1\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id, '\"id\" field').to.eql(2);\r",
									"    pm.expect(jsonData.text, '\"text\" field').to.eql(\"update text for test patch user 1\");\r",
									"    pm.expect(jsonData.userId, '\"userId\" field');\r",
									"    pm.expect(jsonData.created, '\"created\" field').not.null;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"update text for test patch user 1\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/1/comments/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"1",
								"comments",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "обновление текста сообщения от user 400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/1/comments/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"1",
								"comments",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "обновление текста сообщения от user 404 user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"text for update cooment test by user\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/999/comments/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"999",
								"comments",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "обновление текста сообщения от user 404 comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"text for update cooment test by user\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/1/comments/999",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"1",
								"comments",
								"999"
							]
						}
					},
					"response": []
				},
				{
					"name": "добавление нового комментария от user 404-NOT PUBLISHED",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"text for test comments method\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/1/comments/event/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"1",
								"comments",
								"event",
								"1"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080"
		}
	]
}